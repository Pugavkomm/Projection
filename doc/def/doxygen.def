AutoGen Definitions dummy;
class = {
  cp-id     = 'db/d40/class_compute';
  cp-name   = 'Compute';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'db/d40/class_compute_1a83e5a30d2fb4204ed38a2c12d6b3b5f3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Compute';
      sec-mem-desc-file = '/home/mech/projects/projection/include/compute.h';
      sec-mem-desc-line = '21';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Construct a new Compute object.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'db/d40/class_compute_1a7b1ca69b192969f356546d0838f72e4c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Compute';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::vector< Point > &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'line';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Point &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'input_point';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/mech/projects/projection/include/compute.h';
      sec-mem-desc-line = '29';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Construct a new Compute object.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param line the input line (sequence of points).
@param input_point the input point that is projected onto the line.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'db/d40/class_compute_1ab0fe1f8ac1ed76a10e3aabcc4b4c3c3b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Compute';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'namefile';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Point &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'input_point';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/mech/projects/projection/include/compute.h';
      sec-mem-desc-line = '37';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Construct a new Compute object.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param namefile the file with data.
@param input_point the input point that is projected onto the line.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'db/d40/class_compute_1a3e13630b849672e04ffca6612ce4d6a5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_line_and_input';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::vector< Point > &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'line';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Point &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'input_point';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/mech/projects/projection/include/compute.h';
      sec-mem-desc-line = '45';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the points from file and input object. After it, This method calls @ref compute_projections.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param line input line (sequence of points).
@param input_point the input point that is projected onto the line.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'db/d40/class_compute_1a4d7fe94f55b3c1b073d7793250f12c3d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_file_and_input';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'namefile';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Point &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'input_point';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/mech/projects/projection/include/compute.h';
      sec-mem-desc-line = '52';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the points and input object. After it, This method calls @ref compute_projections.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param line input line (sequence of points).
@param input_point the input point that is projected onto the line.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'db/d40/class_compute_1a7a7d6e380ad5f1b9a43aa067b0b82358';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'display_projections';
      sec-mem-desc-file = '/home/mech/projects/projection/include/compute.h';
      sec-mem-desc-line = '58';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
displays found values
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'db/d40/class_compute_1a81ff09556bf21b66bf2dd7e063b2ff01';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'compute_projections';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::vector< Point > &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'line';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/mech/projects/projection/include/compute.h';
      sec-mem-desc-line = '66';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Compute all projections and save save in @ref projections.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param line the input line (sequence of points).
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'db/d40/class_compute_1aba36d8c3585952779d53a90caf272949';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'compute_one_projection';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Point &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'begin';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Point &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'end';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/mech/projects/projection/include/compute.h';
      sec-mem-desc-line = '75';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Compute all projections and save save in @ref temp_projection.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param direction_vector 
@param begin start line.
@param end end line.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'db/d40/class_compute_1a7167a636bfbc58b78b284c61ed503a7f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Point
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'input_point';
      sec-mem-desc-file = '/home/mech/projects/projection/include/compute.h';
      sec-mem-desc-line = '81';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
the input point that is projected onto the line.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'db/d40/class_compute_1addde178fe4dd782fe439016e96916e37';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Point
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'temp_projection';
      sec-mem-desc-file = '/home/mech/projects/projection/include/compute.h';
      sec-mem-desc-line = '87';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
temp projection (use in methods).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'db/d40/class_compute_1ad35ceddcffa6e2c4bdd434010be734fc';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'current_parameter';
      sec-mem-desc-file = '/home/mech/projects/projection/include/compute.h';
      sec-mem-desc-line = '93';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
current parameter(use in methods).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'db/d40/class_compute_1a104d3caa716baed26960d06177dc2eae';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< unsigned int >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'segments';
      sec-mem-desc-file = '/home/mech/projects/projection/include/compute.h';
      sec-mem-desc-line = '99';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
found numbers of segmetns.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'db/d40/class_compute_1a2d5803fa8e2ad55f9dac076b636c09bb';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< float >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'parameters';
      sec-mem-desc-file = '/home/mech/projects/projection/include/compute.h';
      sec-mem-desc-line = '105';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
found parameters.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'db/d40/class_compute_1aa1b61d1d35cc297bb77907bc5588912d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< Point >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'projections';
      sec-mem-desc-file = '/home/mech/projects/projection/include/compute.h';
      sec-mem-desc-line = '111';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
found projections.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/mech/projects/projection/include/compute.h';
  cp-fileline  = '14';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Basic computing class.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'Point';
        node-link = {
          node-link-id = 'd0/d69/class_point';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'Compute';
        node-link = {
          node-link-id = 'db/d40/class_compute';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
input_point
temp_projection
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'd0/d69/class_point';
  cp-name   = 'Point';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'd0/d69/class_point_1ad92f2337b839a94ce97dcdb439b4325a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Point';
      sec-mem-desc-file = '/home/mech/projects/projection/include/point.h';
      sec-mem-desc-line = '19';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Default constructor that defines a point at the origin.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'd0/d69/class_point_1a4d43f5247afe8c85c6da1aa39dbcc738';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Point';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'y';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'z';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/mech/projects/projection/include/point.h';
      sec-mem-desc-line = '25';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The constructor defines point.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param x ,  y, z are coordinates of input point.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'd0/d69/class_point_1a5c87e531b784754068eba91f8e8cfd53';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setPoint';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'y';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'z';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/mech/projects/projection/include/point.h';
      sec-mem-desc-line = '31';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The method sets the coordinates of the point.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param x ,  y, z are coordinates of input.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'd0/d69/class_point_1a07ebcfc85e0e4d5b6479ab93f39708b0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'printPoint';
      sec-mem-desc-file = '/home/mech/projects/projection/include/point.h';
      sec-mem-desc-line = '38';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The method prints point.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param left left operand.
@param right right operand.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'd0/d69/class_point_1ade14b9abfa555da35f24b1c1612c4ef1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dist_between';
      sec-mem-desc-file = '/home/mech/projects/projection/include/point.h';
      sec-mem-desc-line = '44';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Calculates the sum of the squares of the coordinates of a point.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@returns the sum of the squares of the coordinates of a point
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'd0/d69/class_point_1a842cdbdf8d2d80322c0ee34995498169';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dist_between';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Point &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'right';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/mech/projects/projection/include/point.h';
      sec-mem-desc-line = '51';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Computes the distance between two input points.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param right second point
@returns distance between this point and the second point
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'd0/d69/class_point_1a3013241afa6ea8971e71dec792827953';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'sum_coordinates';
      sec-mem-desc-file = '/home/mech/projects/projection/include/point.h';
      sec-mem-desc-line = '58';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Computes sum of coordinates point.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@returns sum of coordinates point.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'd0/d69/class_point_1a24cf65e8db0962db5fdab50b9e9ce1fa';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator[]';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'index';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/mech/projects/projection/include/point.h';
      sec-mem-desc-line = '93';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Indexing operator. It returns the x, y, z coordinate depending on the index from the range [0, 2].
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param index: 0 &ndash; x, 1 &ndash; y, 2 &ndash; z. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'd0/d69/class_point_1a3e1511850eaa47ab3633126a1f98e787';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'point';
      sec-mem-desc-file = '/home/mech/projects/projection/include/point.h';
      sec-mem-desc-line = '100';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
point(x, y, z)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'signal';
    sec-member = {
      sec-mem-kind = 'friend';
      sec-mem-id   = 'd0/d69/class_point_1adc0ae410968ebfcac79ebcf9d4eb3f5b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
friend Point
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator-';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Point &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'left';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Point &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'right';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/mech/projects/projection/include/point.h';
      sec-mem-desc-line = '65';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The operator calculates a point that is the difference between all coordinates of the other two points.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param left left operand.
@param right right operand.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'friend';
      sec-mem-id   = 'd0/d69/class_point_1a3ad987a0921dfb738bbbb245e6eb518d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
friend double
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator*';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Point &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'left';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Point &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'right';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/mech/projects/projection/include/point.h';
      sec-mem-desc-line = '73';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The operator calculates the dot product.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param left left operand (Point).
@param right right operand (Point).
@returns dot product.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'friend';
      sec-mem-id   = 'd0/d69/class_point_1a872420e38dbac7c2cef2dd2ecbdbffdf';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
friend Point
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator*';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Point &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'left';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'right';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/mech/projects/projection/include/point.h';
      sec-mem-desc-line = '80';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The operator calculates the multiplication point by double.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param left left operand (Point).
@param right right operand (double).
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'friend';
      sec-mem-id   = 'd0/d69/class_point_1a7079c73de603914524a40929cb99e5db';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
friend Point
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator/';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Point &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'left';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const double
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'right';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/mech/projects/projection/include/point.h';
      sec-mem-desc-line = '87';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The operator сalculates left per double number.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param left left operand (Point).
@param right right operand (double).
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/mech/projects/projection/include/point.h';
  cp-fileline  = '12';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Point is point in 3D space (because constant DIM = 3)
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'd7/da7/class_read___data';
  cp-name   = 'Read_Data';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'd7/da7/class_read___data_1a07d0952813ea87db5e93d79ac40ef014';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Read_Data';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'namefile';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/mech/projects/projection/include/read_data.h';
      sec-mem-desc-line = '25';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Construct a new Read_Data object.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param namefile file name with points
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'd7/da7/class_read___data_1a0c188d5f57aa8e4c4b294ae552d95e0e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'open';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'namefile';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/mech/projects/projection/include/read_data.h';
      sec-mem-desc-line = '32';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
open ifstream.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param namefile file name with points.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'd7/da7/class_read___data_1a085e89481b053dfc33ba270677fe8d01';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'close';
      sec-mem-desc-file = '/home/mech/projects/projection/include/read_data.h';
      sec-mem-desc-line = '38';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
close if stream.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'd7/da7/class_read___data_1a66cacbc790161305f83ac5acad6776ce';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read_to_line';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::vector< Point > &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'line';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/mech/projects/projection/include/read_data.h';
      sec-mem-desc-line = '45';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
read point from file and save in @ref line
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param line input line (sequence of points).
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'd7/da7/class_read___data_1ab5d6f5551553dc9000ac8581b46947eb';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::ifstream
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'file';
      sec-mem-desc-file = '/home/mech/projects/projection/include/read_data.h';
      sec-mem-desc-line = '48';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/mech/projects/projection/include/read_data.h';
  cp-fileline  = '17';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Read line from file.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'Read_Data';
        node-link = {
          node-link-id = 'd7/da7/class_read___data';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
file
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'ifstream';
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
file = {
  file-id   = 'd9/d41/compute_8h';
  file-name = 'compute.h';
  file-full-name  = '/home/mech/projects/projection/include/compute.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Compute class interface.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_



_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'd8/db5/consts_8h';
  file-name = 'consts.h';
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'd8/db5/consts_8h_1a562b5de54159621c1c44505fb2a11ab4';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static const float
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'ACCUR';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 1e-7
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/mech/projects/projection/include/consts.h';
      var-mem-desc-line = '10';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Distance measurement accuracy.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'd8/db5/consts_8h_1a589b8b9bfdf714f736059845d568b597';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static const int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'DIM';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 3
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/home/mech/projects/projection/include/consts.h';
      var-mem-desc-line = '15';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
3D space
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/home/mech/projects/projection/include/consts.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Constants.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_



_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'd2/d91/point_8h';
  file-name = 'point.h';
  file-full-name  = '/home/mech/projects/projection/include/point.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Point class interface.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_



_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'dc/d36/read__data_8h';
  file-name = 'read_data.h';
  file-full-name  = '/home/mech/projects/projection/include/read_data.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Read_Data class interface.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_



_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'd5/dea/compute_8cpp';
  file-name = 'compute.cpp';
  file-full-name  = '/home/mech/projects/projection/src/compute.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Implementing the Compute interface.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_



_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'df/d0a/main_8cpp';
  file-name = 'main.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'df/d0a/main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'main';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'argc';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'argv';
        func-mem-param-array = '[]';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/mech/projects/projection/src/main.cpp';
      func-mem-desc-line = '64';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/mech/projects/projection/src/main.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'd5/d55/point_8cpp';
  file-name = 'point.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'd5/d55/point_8cpp_1a5a9ca25b6c80fa53e90c02e432f9725d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Point
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'operator-';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Point &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'left';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Point &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'right';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/mech/projects/projection/src/point.cpp';
      func-mem-desc-line = '63';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param left left operand.
@param right right operand.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'd5/d55/point_8cpp_1ac11bff72e39c1d5c37ad60ad71317e0c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
double
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'operator*';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Point &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'left';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Point &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'right';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/mech/projects/projection/src/point.cpp';
      func-mem-desc-line = '68';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param left left operand (Point).
@param right right operand (Point).
@returns dot product.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'd5/d55/point_8cpp_1a7fcb5863811c98ede8fca32b8ff1d455';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Point
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'operator*';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Point &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'left';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const double
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'right';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/mech/projects/projection/src/point.cpp';
      func-mem-desc-line = '73';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param left left operand (Point).
@param right right operand (double).
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'd5/d55/point_8cpp_1aaec54e631988089518dad635a59d543d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Point
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'operator/';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const Point &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'left';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const double
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'right';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/home/mech/projects/projection/src/point.cpp';
      func-mem-desc-line = '78';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param left left operand (Point).
@param right right operand (double).
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/home/mech/projects/projection/src/point.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Implementing the Point interface.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_



_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'd0/d40/read__data_8cpp';
  file-name = 'read_data.cpp';
  file-full-name  = '/home/mech/projects/projection/src/read_data.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Implementing the Compute interface.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_



_EnD_oF_dEf_TeXt_;
}; /* file */
